1.内部指令使用说明

本程序支持8个内部指令,其他外部指令通过调用Linux中的可执行程序实现。

 $ cd [dir]
    -从当前的工作目录调转到指定目录dir;
    -如果没有指定参数dir,则输出当前工作目录;
    -如果dir不存在,将输出错误信息；
    -该指令同时会将环境变量PWD修改为跳转目录的绝对路径。

 $ clr
    -清空屏幕上的显示内容;
    -该指令没有参数。

 $ dir [dir]
    -以"-al"模式,即长格式显示目录dir下的所有内容,包括目录、文件以及隐藏文件;
    -该指令接受只接受一个目录参数dir,多余的会被忽略;
    -如果没有指定参数dir,则输出当前工作目录下的所有内容;
    -如果dir不存在,将输出错误信息。

 $ echo [comment]
    -输出comment的具体内容并换行;
    -当comment的内容出现多个连续space或者tab时,将只输出一个space。

 $ environ
    -输出所有的环境变量;
    -该指令没有参数。

 $ help
    -输出用户指南;
    -该指令没有参数。

 $ pause
    -停止Shell的执行,直到用户按下enter键;
    -该指令没有参数。   

 $ quit
    -退出Shell程序;
    -该指令没有参数。

2.环境变量说明

本程序用到/修改过的环境变量有SHELL,PWD和PARENT。
 
 $ SHELL
    -值为Shell程序的绝对路径,在执行过程中保持不变。
 
 $ PWD
    -值为当前工作目录的绝对路径;
    -使用cd命令将修改PWD值为指定目录绝对路径。

 $ PARENT
    -只存在于Shell程序创建的子进程中;
    -值为父进程,即Shell程序的绝对路径。

3.I/O重定向说明

本程序支持标准输入和标准输出的重定向。

 $ < [file]
    -重定向标准输入为file;
    -重定向后,指令的输入参数将来自于file,而不是用户输入;
    -file是文件的绝对路径或相对路径;
    -file应为已存在文件,如file不存在将输出错误信息;
    -输入重定向符<通过空格(一个或多个space和tab)与其他命令行参数隔开。

 $ > [file]
    -重定向标准输出为file;
    -重定向后,指令的输出结果将直接输入file,而不是屏幕;
    -file是文件的绝对路径或相对路径;
    -如果file不存在,将在file所在的目录创建下创建file;
    -如果file已存在,将清空file的内容并指令输出结果输入file;
    -如果file是非法路径,将输出错误信息;
    -输出重定向符>通过(一个或多个space和tab)与其他命令行参数隔开。

 $ >> [file]
    -重定向标准输出为file;
    -重定向后,指令的输出结果将直接输入file,而不是屏幕;
    -file是文件的绝对路径或相对路径;
    -如果file不存在,将在file所在的目录创建下创建file;
    -如果file已存在,从file末尾输入指令输出结果;
    -如果file是非法路径,将输出错误信息;
    -输出重定向符>>通过(一个或多个space和tab)与其他命令行参数隔开。
    

4.后台执行说明

本程序支持指令的后台执行。

 $ &
    -在命令行参数中加入&将使该指令转入后台执行;
    -Shell进程输出子进程的pid后返回;
    -后台执行符&通过(一个或多个space和tab)与其他命令行参数隔开。

5.批处理说明

本程序支持指令的批处理。

 $ myshell [batchfile]
    -使用Shell程序时带有参数batchfile,那么Shell程序将从指定文件中读取指令并执行;
    -batchfile应为已存在文件的绝对或相对路径;
    -如果batchfile不存在,将输出错误信息;
    -只支持一个批处理文件,多于一个时程序将输出错误信息并退出。